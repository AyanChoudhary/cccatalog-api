name: Python CI

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install PostgreSQL 10 client
      run: |
        sudo apt-get -yqq install libpq-dev
    - name: Install libexempi3
      run: |
        sudo apt-get install -y libexempi3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
        python -m pip install jsonpickle
        cd cccatalog-api && pipenv install --system --deploy --dev && cd ..
        cd ingestion_server && pipenv install --system --deploy --dev && cd ..
        cd analytics && pipenv install && cd ..
    - name: Start docker
      run: |
        docker-compose up -d
        bash -c 'while [[ "$(curl --insecure -s -o /dev/null -w ''%{http_code}'' http://localhost:8000/healthcheck)" != "200" ]]; do sleep 10 && docker logs cccatalog-api_web_1; done'
        ./load_sample_data.sh
        bash -c 'while [[ "$(curl --insecure -s -o /dev/null -w ''%{http_code}'' http://localhost:8000/v1/images?q=test)" != "200" ]]; do sleep 5; done'
    - name: Run Tests
      run: |
        pycodestyle cccatalog-api/cccatalog --exclude='cccatalog-api/cccatalog/api/migrations' --max-line-length=80 --ignore=E402 
        pycodestyle ingestion_server/ingestion_server --max-line-length=80 --ignore=E402
        cd cccatalog-api && test/run_test.sh
        cd ../ingestion_server && pytest test/unit_tests.py
        cd ../ && docker-compose logs analytics
        cd ./analytics && API_URL='analytics:8090' pytest tests.py --disable-pytest-warnings
        cd ../ && docker-compose logs analytics
      env:
        CCCAPI_CONTAINER_NAME: cccatalog-api_web_1
        ANALYTICS_CONTAINER_NAME: cccatalog-api_analytics_1
        ANALYTICS_SERVER_URL: http://localhost:8090
